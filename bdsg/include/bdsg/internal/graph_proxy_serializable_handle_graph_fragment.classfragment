// UNGUARDED CODE FRAGMENT FOR PROXY CODE GENERATION!
// Meant to be included inside a class!
// Nobody tell Doxygen!

// Methods needed for implementing SerializableHandleGraph

#ifdef BDSG_INSIDE_CLASS

public:
    /// Returns a number that is specific to the serialized implementation for type
    /// checking. Does not depend on the contents of any particular instantiation
    /// (i.e. behaves as if static, but cannot be static and virtual).
    virtual uint32_t get_magic_number() const {
        return this->get()->get_magic_number();
    }
    
    /// Write the contents of this object to an ostream. Makes sure to include a
    /// leading magic number.
    virtual void serialize(std::ostream& out) const {
        this->get()->serialize(out);
    }
    
    /// Write the contents of this object to a named file. Makes sure to include
    /// a leading magic number.
    virtual void serialize(const std::string& filename) const {
        this->get()->serialize(filename);
    }
    
    /// Sets the contents of this object to the contents of a serialized object
    /// from an istream. The serialized object must be from the same
    /// implementation of the interface as is calling deserialize(). Can only
    /// be called on an empty object.
    virtual void deserialize(std::istream& in) {
        this->get()->deserialize(in);
    }
    
    /// Sets the contents of this object to the contents of a serialized object
    /// from a file. The serialized object must be from the same implementation
    /// of this interface as is calling deserialize(). Can only be called on an
    /// empty object.
    virtual void deserialize(const std::string& filename) {
        this->get()->deserialize(filename);
    }
    
    /// Write the contents of this object to an ostream. Makes sure to include a
    /// leading magic number.
    virtual void serialize(std::ostream& out) {
        this->get()->serialize(out);
    }
    
    /// Write the contents of this object to a named file. Makes sure to include
    /// a leading magic number.
    virtual void serialize(const std::string& filename) {
        this->get()->serialize(filename);
    }

protected:
    /// Underlying implementation for "serialize" method
    virtual void serialize_members(std::ostream& out) const {
        this->get()->serialize_members(out);
    }
    
    /// Underlying implementation to "deserialize" method
    virtual void deserialize_members(std::istream& in){
        this->get()->deserialize_members(in);
    }

#endif
